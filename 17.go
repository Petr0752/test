package main

import "fmt"

func binarySearch(array []int, target int) int {
	low, high := 0, len(array)-1
	for low <= high {
		mid := low + (high-low)/2
		if array[mid] == target {
			return mid
		} else if array[mid] < target {
			low = mid + 1
		} else {
			high = mid - 1
		}
	}
	return -1
}

func main() {
	numbers := []int{1, 2, 4, 3, 5, 6, 7, 8, 9}
	target := 4
	index := binarySearch(numbers, target)
	if index != -1 {
		fmt.Println("Target found at index:", index)
	} else {
		fmt.Println("Target not found")
	}
}

// Определение функции binarySearch.
// Параметры функции: массив целых чисел "numbers" и искомый элемент "key".
// Определение переменных low и high, которые представляют границы интервала,
// в котором ищется искомый элемент. Начальное значение low равно 0, high равно длине массива - 1.
// Вычисление средней позиции в интервале с помощью выражения (low + high) / 2.
// Сравнение элемента в средней позиции с искомым элементом.
// Если значение элемента в середине совпадает с искомым, возвращается индекс этого элемента.

// Если значение элемента в середине меньше искомого, то поиск продолжается в правой половине массива.

// Если значение элемента в середине больше искомого, то поиск продолжается в левой половине массива.

// Повторяется пункты 5-8, пока не будет найден элемент или до окончания массива.

// Если элемент не найден, то возвращается -1.
